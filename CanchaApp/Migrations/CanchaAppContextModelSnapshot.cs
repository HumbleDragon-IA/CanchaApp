// <auto-generated />
using System;
using CanchaApp.Modelo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CanchaApp.Migrations
{
    [DbContext(typeof(CanchaAppContext))]
    partial class CanchaAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CanchaApp.Modelo.Cancha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCapacidad")
                        .HasColumnType("int")
                        .HasColumnName("idCapacidad");

                    b.Property<int>("IdTipoPiso")
                        .HasColumnType("int")
                        .HasColumnName("idTipoPiso");

                    b.Property<double?>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCapacidad");

                    b.HasIndex("IdTipoPiso");

                    b.ToTable("Cancha", (string)null);
                });

            modelBuilder.Entity("CanchaApp.Modelo.Capacidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Tamaño")
                        .HasColumnType("int")
                        .HasColumnName("tamaño");

                    b.HasKey("Id");

                    b.ToTable("capacidad", (string)null);
                });

            modelBuilder.Entity("CanchaApp.Modelo.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("Comentario", (string)null);
                });

            modelBuilder.Entity("CanchaApp.Modelo.TipoPiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TipoPiso1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoPiso");

                    b.HasKey("Id");

                    b.ToTable("TipoPiso", (string)null);
                });

            modelBuilder.Entity("CanchaApp.Modelo.Turno", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.HasKey("Id")
                        .HasName("PK__Turno__3214EC2704D061F6");

                    b.ToTable("Turno", (string)null);
                });

            modelBuilder.Entity("CanchaApp.Modelo.TurnoReservado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCancha")
                        .HasColumnType("int")
                        .HasColumnName("idCancha");

                    b.Property<int>("IdTurno")
                        .HasColumnType("int")
                        .HasColumnName("idTurno");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("Id");

                    b.HasIndex("IdCancha");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TurnoReservado", (string)null);
                });

            modelBuilder.Entity("CanchaApp.Modelo.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Admin")
                        .HasColumnType("bit")
                        .HasColumnName("admin");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("PK_user");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("CanchaApp.Modelo.VistaGeneralTurnosReservado", b =>
                {
                    b.Property<string>("ApellidoUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeSpan?>("HorarioReserva")
                        .HasColumnType("time");

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Precio")
                        .HasColumnType("float");

                    b.Property<int?>("TamañoCancha")
                        .HasColumnType("int");

                    b.Property<string>("TipoPisoCancha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("idVista")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("VistaGeneralTurnosReservados", (string)null);
                });

            modelBuilder.Entity("CanchaApp.Modelo.Cancha", b =>
                {
                    b.HasOne("CanchaApp.Modelo.Capacidad", "IdCapacidadNavigation")
                        .WithMany("Cancha")
                        .HasForeignKey("IdCapacidad")
                        .IsRequired()
                        .HasConstraintName("FK_Cancha_capacidad");

                    b.HasOne("CanchaApp.Modelo.TipoPiso", "IdTipoPisoNavigation")
                        .WithMany("Cancha")
                        .HasForeignKey("IdTipoPiso")
                        .IsRequired()
                        .HasConstraintName("FK_Cancha_TipoPiso");

                    b.Navigation("IdCapacidadNavigation");

                    b.Navigation("IdTipoPisoNavigation");
                });

            modelBuilder.Entity("CanchaApp.Modelo.TurnoReservado", b =>
                {
                    b.HasOne("CanchaApp.Modelo.Cancha", "IdCanchaNavigation")
                        .WithMany("TurnoReservados")
                        .HasForeignKey("IdCancha")
                        .IsRequired()
                        .HasConstraintName("FK_TurnoReservado_Cancha");

                    b.HasOne("CanchaApp.Modelo.Usuario", "IdUsuarioNavigation")
                        .WithMany("TurnoReservados")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_TurnoReservado_usuario");

                    b.Navigation("IdCanchaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("CanchaApp.Modelo.Cancha", b =>
                {
                    b.Navigation("TurnoReservados");
                });

            modelBuilder.Entity("CanchaApp.Modelo.Capacidad", b =>
                {
                    b.Navigation("Cancha");
                });

            modelBuilder.Entity("CanchaApp.Modelo.TipoPiso", b =>
                {
                    b.Navigation("Cancha");
                });

            modelBuilder.Entity("CanchaApp.Modelo.Usuario", b =>
                {
                    b.Navigation("TurnoReservados");
                });
#pragma warning restore 612, 618
        }
    }
}
